# reverse complement


#Reverse the string
dataset = "GGAGGATGAGGCTGCTAACGCCAGTCGGAGACAGACCGGCCTGCCCAAATGACAGTTGGGGCTCTGAGGAAATGAGAATGGAAATCTTGATTAGACATTATGAGCATGGTGGGGGAGGTCAGGGCTGGATCAGAGCCTCTCTGAACCGCTCTAGTGCTGATCTAGCCATCTCCTTACTACTCCCCACAGTTGGAAGGACATACGGTCCGTTGCAAACTGGCAAAGCACGGCGGTTGAGCCCGCCGGGTCCTATTTAGTAGAGGTTAAAGAAGGAGGTCACCCAGGTTGTCATCTCTAATCCTACGTATATGCGATGACGTGGGAAAGAAGGCTTGCGAAATTAGAAACCGGCCAGTGCCGTCACAAGCAGAGTGGGAGACCGTTGTAGGCCTTGCACCCAATTTGAAGCCCGGCCACTTATCTTATGCGTTGGAGGAGGGGTGGAAACTATAGCACAGTGTTAGGGAGACGGAACCGGTGCCGTTGCTATTCTTATGCGTGACCGACGGCCGTGGTAATGCCGGCGTCAAGTAGTTTATGCGGGTGGTGGAACGCTGGTGCTAACTCGTTAGTGACCTCGATGCTAGCTAACAATGGACTGGGGGCCAGCTCCCGACCTACTAGAACGGCAGTGAAGTCGCCATCCAGAGTGCAAGCGGAGATGTCGCTTCCTTTGATGACGGGCCAAAGATTTACGACCCTAATGCGACAACACGGTAATACAGGATGGAGAACACAGCGCGCTGAATGCACATACAACGAAGCCGATGGCTAGTGCGAACGCCCAGAATACAATCCGAACCTTACCGATAGAAACATGTTAAGAACCTAATTGTCTGTGATTTTGAAGCTACCGTCATCGGCCTGCACGGCGCATTAACGTTTAAGACTAGGCCCATCTCTGTATCTACTGCCTAACTATAATGTAAATCCAGAGGTGAGCAATTCTACAGAGCCCTTGCCTCAGACTCGCCTGGACA"[::-1] #step 1: reverse the string

#replace the characters with mapping
new_dataset = str.maketrans("ACGT", "TGCA") #step 2: create complement mappying
reverse_complement = dataset.translate(new_dataset) #step 3: apply translation
print(reverse_complement)